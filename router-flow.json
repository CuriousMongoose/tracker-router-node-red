[
    {
        "id": "69b9c715.d7e7d8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "40ac186.d84b8e8",
        "type": "udp in",
        "z": "69b9c715.d7e7d8",
        "name": "",
        "iface": "",
        "port": "8891",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "buffer",
        "x": 80,
        "y": 80,
        "wires": [
            [
                "355b602f.76874"
            ]
        ]
    },
    {
        "id": "2ddbf24c.daac3e",
        "type": "debug",
        "z": "69b9c715.d7e7d8",
        "name": "Processed Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 730,
        "y": 40,
        "wires": []
    },
    {
        "id": "355b602f.76874",
        "type": "function",
        "z": "69b9c715.d7e7d8",
        "name": "unpack UDP packet",
        "func": "var break1 = msg.payload.indexOf(0x0A);\nvar break2 = msg.payload.lastIndexOf(0x0A);\n\nmsg.deviceID = msg.payload.slice(0,break1).toString();\nmsg.token = msg.payload.slice(break1+1, break2).toString();\nmsg.payload = msg.payload.slice(break2 + 2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 80,
        "wires": [
            [
                "4c69017e.1c338"
            ]
        ]
    },
    {
        "id": "1f51615b.fb75af",
        "type": "function",
        "z": "69b9c715.d7e7d8",
        "name": "payload value calculations",
        "func": "var newmsg = msg\nvar typedarray = new Uint8Array(msg.payload);\nvar view = new DataView(typedarray.buffer, 0);\n\nnewmsg.payload = {};\n\nnewmsg.payload.deviceID = msg.deviceID;\nnewmsg.payload.datetime=view.getUint32(0,true);\nnewmsg.payload.battery=view.getUint8(4);\nnewmsg.payload.temp=view.getUint8(5);\nnewmsg.payload.lat=view.getInt32(6,true);\nnewmsg.payload.lon=view.getInt32(10,true);\nnewmsg.payload.alt=view.getInt16(14,true);\nnewmsg.payload.speed=view.getUint16(16,true);\nnewmsg.payload.heading=view.getUint8(18);\nnewmsg.payload.satcount=view.getUint8(19);\nnewmsg.payload.ttf=view.getUint8(20);\n\nnewmsg.payload.battery = newmsg.payload.battery*10+3000;\nnewmsg.payload.lat = newmsg.payload.lat/10000000;\nnewmsg.payload.lon = newmsg.payload.lon/10000000;\n\nreturn newmsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 100,
        "wires": [
            [
                "2ddbf24c.daac3e",
                "a22d8e5c.86b6a"
            ]
        ]
    },
    {
        "id": "4c69017e.1c338",
        "type": "switch",
        "z": "69b9c715.d7e7d8",
        "name": "Check Token",
        "property": "token",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "1f51615b.fb75af"
            ],
            [
                "5ebd6e1b.ab91f"
            ]
        ]
    },
    {
        "id": "5ebd6e1b.ab91f",
        "type": "change",
        "z": "69b9c715.d7e7d8",
        "name": "Failed auth",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Failed Auth",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "786fa4d5.ff15ec"
            ]
        ]
    },
    {
        "id": "786fa4d5.ff15ec",
        "type": "debug",
        "z": "69b9c715.d7e7d8",
        "name": "Failed Auth",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 750,
        "y": 220,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "a22d8e5c.86b6a",
        "type": "mqtt out",
        "z": "69b9c715.d7e7d8",
        "name": "AWS IOT",
        "topic": "tracker",
        "qos": "1",
        "retain": "",
        "broker": "d2ffe682.78ff08",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "550d7350.ef847c",
        "type": "comment",
        "z": "69b9c715.d7e7d8",
        "name": "Configure Node-RED IP",
        "info": "",
        "x": 120,
        "y": 120,
        "wires": []
    },
    {
        "id": "73233e15.a61a1",
        "type": "comment",
        "z": "69b9c715.d7e7d8",
        "name": "Configure authentication key",
        "info": "",
        "x": 340,
        "y": 200,
        "wires": []
    },
    {
        "id": "f2c301d9.d057b",
        "type": "comment",
        "z": "69b9c715.d7e7d8",
        "name": "Configure AWS IOT MQTT endpoint",
        "info": "",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "d2ffe682.78ff08",
        "type": "mqtt-broker",
        "z": "",
        "name": "AWS IOT",
        "broker": "",
        "port": "8883",
        "tls": "141b6f5f.a60b41",
        "clientid": "tracker-router",
        "usetls": true,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "141b6f5f.a60b41",
        "type": "tls-config",
        "z": "",
        "name": "traker-router",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    }
]